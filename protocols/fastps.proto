
OutTerminator = CR;
InTerminator = CR LF;

getModel {
    out "VER";
    in "#VER:%s\_%*s";
    @init  {
        out "VER";
        in "#VER:%s\_%*s"
    }
}

# TODO: add parsing for 10006 model
getLimitCurrent {
    out "VER";
    in "#VER:%*s\_%02d%*s";
    @init {
        out "VER";
        in "#VER:%*s\_%(\$1Current.HOPR)02d%*s";
    };
}

getLimitVoltage {
    out "VER";
    in "#VER:%*s\_%*02d%02d%*s";
    @init {
        out "VER";
        in "#VER:%*s\_%*02d%(\$1Voltage.HOPR)02d%*s";
    };
}

getVersion {
    out "VER";
    in "#VER:%*s\_%*[^:]:%s";
    @init {
        out "VER";
        in "#VER:%*s\_%*[^:]:%s";
    };
}

################################################################################

setEnable {
    out "%{MOFF|MON}";
    in "#AK";
}

setRegulationMode {
    out "LOOP:%{V|I}";
    in "#AK";
    @init {
        out "LOOP:?";
        in "#LOOP:%{V|I}";
    };
}

# the commands are MWV (go to setpt without ramp) and MWVR (ramp)
setVoltage {
    out "MWV%(\$1RampEnable){|R}:%f";
    in "#AK";
}

# the commands are MWI (go to setpt without ramp) and MWIR (ramp)
setCurrent {
    out "MWI%(\$1RampEnable){|R}:%f";
    in "#AK";
}

resetStatus {
    out "MRESET";
    in "#AK";
}

################################################################################

getOutputVoltage {
    out "MRV";
    in "#MRV:%f";
}

getOutputCurrent {
    out "MRI";
    in "#MRI:%f";
}

getGroundCurrent {
    out "MGC";
    in "#MGC:%f";
}

getDCLinkVoltage {
    out "MRP";
    in "#MRP:%f";
}

getTemperature {
    out "MRT";
    in "#MRT:%f";
}

getStatusMSB {
    out "MST";
    in "#MST:%4x%*4x";
}

getStatusLSB {
    out "MST";
    in "#MST:%*4x%4x";
    @init {
        out "MST";
        in "#MST:%*4x%4x";
    }
}
